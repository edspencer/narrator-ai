"use strict";(self.webpackChunkdocs_2=self.webpackChunkdocs_2||[]).push([[567],{5226:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"category","label":"Documentation","items":[{"type":"link","label":"NarratorAI Introduction","href":"/","docId":"intro","unlisted":false},{"type":"link","label":"Generating Content","href":"/generation","docId":"generation","unlisted":false},{"type":"link","label":"Rendering Content","href":"/rendering","docId":"rendering","unlisted":false},{"type":"link","label":"Training Narrator","href":"/training","docId":"training","unlisted":false},{"type":"link","label":"Configuration","href":"/configuration","docId":"configuration","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"narrator-ai","items":[{"type":"link","label":"Narrator","href":"/api/classes/Narrator","docId":"api/classes/Narrator","unlisted":false},{"type":"category","label":"Types","items":[{"type":"link","label":"NarratorArgs","href":"/api/interfaces/NarratorArgs","docId":"api/interfaces/NarratorArgs","unlisted":false},{"type":"link","label":"GenerateOptions","href":"/api/interfaces/GenerateOptions","docId":"api/interfaces/GenerateOptions","unlisted":false},{"type":"link","label":"SaveExampleArgs","href":"/api/interfaces/SaveExampleArgs","docId":"api/interfaces/SaveExampleArgs","unlisted":false},{"type":"link","label":"Narration","href":"/api/type-aliases/Narration","docId":"api/type-aliases/Narration","unlisted":false},{"type":"link","label":"Evaluation","href":"/api/type-aliases/Evaluation","docId":"api/type-aliases/Evaluation","unlisted":false},{"type":"link","label":"Example","href":"/api/type-aliases/Example","docId":"api/type-aliases/Example","unlisted":false},{"type":"link","label":"GenerationTask","href":"/api/type-aliases/GenerationTask","docId":"api/type-aliases/GenerationTask","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"@narrator-ai/react","items":[{"type":"category","label":"Components","items":[{"type":"link","label":"Narration","href":"/react/functions/Narration","docId":"react/functions/Narration","unlisted":false},{"type":"link","label":"NarrationProps","href":"/react/interfaces/NarrationProps","docId":"react/interfaces/NarrationProps","unlisted":false},{"type":"link","label":"AISparkle","href":"/react/functions/AISparkle","docId":"react/functions/AISparkle","unlisted":false},{"type":"link","label":"BadExample","href":"/react/functions/BadExample","docId":"react/functions/BadExample","unlisted":false},{"type":"link","label":"GoodExample","href":"/react/functions/GoodExample","docId":"react/functions/GoodExample","unlisted":false},{"type":"link","label":"RegenerateNarration","href":"/react/functions/RegenerateNarration","docId":"react/functions/RegenerateNarration","unlisted":false},{"type":"link","label":"Spinner","href":"/react/functions/Spinner","docId":"react/functions/Spinner","unlisted":false},{"type":"link","label":"SubmitButton","href":"/react/functions/SubmitButton","docId":"react/functions/SubmitButton","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Provider","items":[{"type":"link","label":"createNarrator","href":"/react/functions/createNarrator","docId":"react/functions/createNarrator","unlisted":false},{"type":"link","label":"CreateNarratorProps","href":"/react/type-aliases/CreateNarratorProps","docId":"react/type-aliases/CreateNarratorProps","unlisted":false},{"type":"link","label":"NarrationActions","href":"/react/type-aliases/NarrationActions","docId":"react/type-aliases/NarrationActions","unlisted":false},{"type":"link","label":"useNarration","href":"/react/functions/useNarration","docId":"react/functions/useNarration","unlisted":false},{"type":"link","label":"useNarrationContext","href":"/react/functions/useNarrationContext","docId":"react/functions/useNarrationContext","unlisted":false},{"type":"link","label":"NarrationProvider","href":"/react/functions/NarrationProvider","docId":"react/functions/NarrationProvider","unlisted":false},{"type":"link","label":"NarrationContextType","href":"/react/interfaces/NarrationContextType","docId":"react/interfaces/NarrationContextType","unlisted":false},{"type":"link","label":"NarrationContext","href":"/react/variables/NarrationContext","docId":"react/variables/NarrationContext","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true}]},"docs":{"api/classes/HumanTrainer":{"id":"api/classes/HumanTrainer","title":"Class: HumanTrainer","description":"The HumanTrainer class implements the Trainer interface and provides"},"api/classes/Narrator":{"id":"api/classes/Narrator","title":"Class: Narrator","description":"Narrator generates meta-content narrations based on other content. It shines at reading and","sidebar":"docs"},"api/index":{"id":"api/index","title":"narrator-ai","description":"Classes"},"api/interfaces/GenerateOptions":{"id":"api/interfaces/GenerateOptions","title":"Interface: GenerateOptions","description":"Options for the generation process.","sidebar":"docs"},"api/interfaces/NarratorArgs":{"id":"api/interfaces/NarratorArgs","title":"Interface: NarratorArgs","description":"Represents the arguments required to create a Narrator instance.","sidebar":"docs"},"api/interfaces/SaveExampleArgs":{"id":"api/interfaces/SaveExampleArgs","title":"Interface: SaveExampleArgs","description":"Arguments for saving examples.","sidebar":"docs"},"api/interfaces/Trainer":{"id":"api/interfaces/Trainer","title":"Interface: Trainer","description":"Interface representing a Trainer that evaluates a generation task."},"api/type-aliases/Evaluation":{"id":"api/type-aliases/Evaluation","title":"Type Alias: Evaluation","description":"Evaluation: object \\\\| object","sidebar":"docs"},"api/type-aliases/Example":{"id":"api/type-aliases/Example","title":"Type Alias: Example","description":"Example: object","sidebar":"docs"},"api/type-aliases/GenerationTask":{"id":"api/type-aliases/GenerationTask","title":"Type Alias: GenerationTask","description":"GenerationTask: object","sidebar":"docs"},"api/type-aliases/Narration":{"id":"api/type-aliases/Narration","title":"Type Alias: Narration","description":"Narration: object","sidebar":"docs"},"api/type-aliases/Verdict":{"id":"api/type-aliases/Verdict","title":"Type Alias: Verdict","description":"Verdict: \\"good\\" \\\\| \\"bad\\""},"configuration":{"id":"configuration","title":"Configuration","description":"All of the configurations for Narrator are optional, but you can significantly influence its operation by passing some or all of the following:","sidebar":"docs"},"generation":{"id":"generation","title":"Generating Content","description":"All of the configurations for Narrator are optional, but if you want to generate and save content you can pass in outputDir and (optionally) outputFilename to have Narrator automatically save its generations for you. For example, if we want to save our generated content as .md files in the ./editorial directory, we can configure it like this:","sidebar":"docs"},"intro":{"id":"intro","title":"NarratorAI Introduction","description":"NarratorAI is a Node JS & React package that makes it easy to generate meta-content \\"narration\\" based on other content. It shines at reading and understanding your existing content like articles, help pages, blog posts, etc, and generating short, friendly summaries that tell the reader what content may be most useful to them.","sidebar":"docs"},"react/functions/AISparkle":{"id":"react/functions/AISparkle","title":"Function: AISparkle()","description":"AISparkle(props): Element","sidebar":"docs"},"react/functions/BadExample":{"id":"react/functions/BadExample","title":"Function: BadExample()","description":"BadExample(props): Element","sidebar":"docs"},"react/functions/createNarrator":{"id":"react/functions/createNarrator","title":"Function: createNarrator()","description":"createNarrator(params): (namedParameters) => Element","sidebar":"docs"},"react/functions/GoodExample":{"id":"react/functions/GoodExample","title":"Function: GoodExample()","description":"GoodExample(props): Element","sidebar":"docs"},"react/functions/Narration":{"id":"react/functions/Narration","title":"Function: Narration()","description":"Narration(props): ReactElement","sidebar":"docs"},"react/functions/NarrationProvider":{"id":"react/functions/NarrationProvider","title":"Function: NarrationProvider()","description":"NarrationProvider(props): Element","sidebar":"docs"},"react/functions/RegenerateNarration":{"id":"react/functions/RegenerateNarration","title":"Function: RegenerateNarration()","description":"RegenerateNarration(props): Element","sidebar":"docs"},"react/functions/Spinner":{"id":"react/functions/Spinner","title":"Function: Spinner()","description":"Spinner(): Element","sidebar":"docs"},"react/functions/SubmitButton":{"id":"react/functions/SubmitButton","title":"Function: SubmitButton()","description":"SubmitButton(props): Element","sidebar":"docs"},"react/functions/useNarration":{"id":"react/functions/useNarration","title":"Function: useNarration()","description":"useNarration(): NarrationContextType","sidebar":"docs"},"react/functions/useNarrationContext":{"id":"react/functions/useNarrationContext","title":"Function: useNarrationContext()","description":"useNarrationContext(): undefined \\\\| NarrationContextType","sidebar":"docs"},"react/index":{"id":"react/index","title":"@narrator-ai/react","description":"Component"},"react/interfaces/NarrationContextType":{"id":"react/interfaces/NarrationContextType","title":"Interface: NarrationContextType","description":"Interface representing the content and operations for narration.","sidebar":"docs"},"react/interfaces/NarrationProps":{"id":"react/interfaces/NarrationProps","title":"Interface: NarrationProps","description":"Props for the Narration component.","sidebar":"docs"},"react/type-aliases/CreateNarratorProps":{"id":"react/type-aliases/CreateNarratorProps","title":"Type Alias: CreateNarratorProps","description":"CreateNarratorProps: object","sidebar":"docs"},"react/type-aliases/NarrationActions":{"id":"react/type-aliases/NarrationActions","title":"Type Alias: NarrationActions","description":"NarrationActions: object","sidebar":"docs"},"react/variables/NarrationContext":{"id":"react/variables/NarrationContext","title":"Variable: NarrationContext","description":"const NarrationContext: Context\\\\","sidebar":"docs"},"rendering":{"id":"rendering","title":"Rendering Content","description":"NarratorAI outputs text and optionally saves it to a file of your choice, so you can render it how you like from there. If you\'re using React you may choose to use the @narrator-ai/react package to get some nice features out of the box:","sidebar":"docs"},"training":{"id":"training","title":"Training Narrator","description":"Spending 5 minutes to train Narrator is likely to significantly improve your results. Training just means giving a good/bad verdict to a piece of content that Narrator generated. Narrator saves this verdict, along with an optional reason (you don\'t have to give a reason, but it\'s a good idea), and next time it generates content for you it will use those good/bad examples to produce a better response.","sidebar":"docs"}}}}')}}]);